{"docstore/metadata": {"a5b4abe0-da4f-4802-a062-a745bfd2a891": {"doc_hash": "b2a763bb020fc65e531ea8c66f359b8e4e1c4ea2432f144b58e2b29d9429d149"}, "bc47d105-2067-4dd0-80be-0e12e151813e": {"doc_hash": "1f2142a299899a0dce19f3304679f47655b205596dbb405dc964fbf2ded244d3", "ref_doc_id": "a5b4abe0-da4f-4802-a062-a745bfd2a891"}, "0fb1fdac-a9b0-4f3a-b65f-b340d808be6f": {"doc_hash": "d3a92a4443770517bebad7ededd2a53cebf4ce248e1550800363fd0adfa6b2ec", "ref_doc_id": "a5b4abe0-da4f-4802-a062-a745bfd2a891"}, "9950bcd9-29af-47ca-9119-8c10af6f9128": {"doc_hash": "5b0eab7e92dc12c1eafb2a38c1cd85f54a43bcf88a34bf92e8fd29df10f7b1d2", "ref_doc_id": "a5b4abe0-da4f-4802-a062-a745bfd2a891"}}, "docstore/data": {"bc47d105-2067-4dd0-80be-0e12e151813e": {"__data__": {"id_": "bc47d105-2067-4dd0-80be-0e12e151813e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a5b4abe0-da4f-4802-a062-a745bfd2a891", "node_type": "4", "metadata": {}, "hash": "b2a763bb020fc65e531ea8c66f359b8e4e1c4ea2432f144b58e2b29d9429d149", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0fb1fdac-a9b0-4f3a-b65f-b340d808be6f", "node_type": "1", "metadata": {}, "hash": "d3a92a4443770517bebad7ededd2a53cebf4ce248e1550800363fd0adfa6b2ec", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "COMPUTER ORGANIZATION AND DESIGN\n\nChapter 1\n\nComputer Abstractions and \nTechnology\n\nby Dr. Gity Karami\n\n\fThe Computer Revolution\n\n\u25a0 Computers are product of IT industry \n\n\u25a0 Rapid improvements in IT promised by Moore\u2019s Law  \n\n\u25a0 Computers have led to a third revolution for civilization (with \n\nthe information revolution taking its place alongside the \nagricultural and the industrial revolutions ) \n\n\u25a0 Computer revolution makes novel applications feasible \n\u25a0 Computers in automobiles (reduce pollution, increase \n\nsafety) \n\n\u25a0 Cell phones (allowing person to person communication) \n\u25a0 Human genome project (the cost was hundreds of millions \n\nof dollars to analyze DNA sequence; costs continue to drop) \n\n\u25a0 World Wide Web (replaced libraries) \n\u25a0 Search Engines (finding info. on web) Moore\u2019s Law: the \n\nnumber of transistors \nper chip doubles every \ntwo years\n\n2\n\n\fClasses of Computers\n\n\u25a0 Computers are used in different class of applications \n\n\u25a0 Personal computers (PCs) \n\u25a0 Server computers \n\u25a0 Supercomputers \n\u25a0 Embedded computers\n\n3\n\n\fClasses of Computers\n\n\u25a0 Personal computers (PCs) \n\n\u25a0 Computers designed for use by an individual \n\u25a0 Emphasize delivery of good performance to single users at low \n\ncost and usually execute third-party software.  \n\n\u25a0 usually incorporating a graphics display, a keyboard, and a mouse  \n\n\u25a0 Server computers \n\n\u25a0 Used for running large programs for multiple users, and accessed \n\nvia network  \n\n\u25a0 Greater computing, storage, and input/output capacity  \n\u25a0 High dependability \n\u25a0 Widest range in cost and capability; \n\u25a0 At the low end, a server may be little more than a desktop \n\ncomputer without a screen or keyboard and cost a thousand \ndollars. These low-end servers are typically used for file storage, \nsmall business applications, or simple web serving \n\n\u25a0 At the other extreme are supercomputers \n\n4\n\n\fClasses of Computers\n\n\u25a0 Supercomputers \n\n\u25a0 Consists of many processors and memory; cost tens \n\nto hundreds of million dollars \n\n\u25a0 High-end scientific and engineering calculations \n\n(weather forecasting) \n\n\u25a0 Highest capability but represent a small fraction of \n\nthe overall computer market \n\n\u25a0 Embedded computers \n\n\u25a0 Computer inside another device used for running one \npredetermined application or collection of software.  \n\n\u25a0 Hidden as components of systems from users \n\u25a0 Minimum performance with stringent limitation on \n\npower and cost \n\n\u25a0 Low tolerance for failures\n\n5\n\n\fThe PostPC Era\n\n6\n\n\fThe PostPC Era\n\u25a0 Replacing PC : Personal Mobile Device \n\n(PMD) \n\u25a0 Small wireless devise to connect internet; they rely on \nbatteries; software is installed by downloading app \n\n\u25a0 Smart phone and tablet \n\u25a0 Rely on touch sensitive screen \n\n\u25a0 Cloud computing \n\n\u25a0 Large collection of servers that provide service over \n\ninternet; are known as Warehouse Scale Computers \n(WSC) \n\n\u25a0 Software as a Service (SaaS) (Microsoft office 365, Google \n\napp, drop box) deployed via  the cloud  \n\n\u25a0 Portion of software run on a PMD and a portion run in the \n\nCloud;  \n\n\u25a0 Advantages: lower cost, better maintenance, lower space, \n\nhigher performance  \n\n\u25a0 Amazon and Google build these WSCs\n\n7\n\n\fWhat You Will Learn\n\n\u25a0 How programs are translated into the machine \n\nlanguage \n\u25a0 And how the hardware executes them \n\n\u25a0 The hardware/software interface; how does \nsoftware instruct the hardware to perform \nneeded functions? \n\n\u25a0 What determines the performance of a program \n\n\u25a0 And how it can be improved \n\n\u25a0 How hardware designers improve performance \n\nand energy efficiency? \n\n\u25a0 What is parallel processing?", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3518, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0fb1fdac-a9b0-4f3a-b65f-b340d808be6f": {"__data__": {"id_": "0fb1fdac-a9b0-4f3a-b65f-b340d808be6f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a5b4abe0-da4f-4802-a062-a745bfd2a891", "node_type": "4", "metadata": {}, "hash": "b2a763bb020fc65e531ea8c66f359b8e4e1c4ea2432f144b58e2b29d9429d149", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bc47d105-2067-4dd0-80be-0e12e151813e", "node_type": "1", "metadata": {}, "hash": "1f2142a299899a0dce19f3304679f47655b205596dbb405dc964fbf2ded244d3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9950bcd9-29af-47ca-9119-8c10af6f9128", "node_type": "1", "metadata": {}, "hash": "5b0eab7e92dc12c1eafb2a38c1cd85f54a43bcf88a34bf92e8fd29df10f7b1d2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u25a0 What determines the performance of a program \n\n\u25a0 And how it can be improved \n\n\u25a0 How hardware designers improve performance \n\nand energy efficiency? \n\n\u25a0 What is parallel processing?\n\n8\n\n\fUnderstanding Performance\n\n\u25a0 Performance of a program depends on \n\u25a0 Algorithm \n\n\u25a0 Determines number of source level statements and I/O \n\noperations \n\n\u25a0 Programming language, compiler, and \n\narchitecture \n\u25a0 Determine number of machine instructions executed \n\nper each source level statement \n\u25a0 Processor and memory system \n\n\u25a0 Determine how fast instructions are executed \n\n\u25a0 I/O system (including OS) \n\n\u25a0 Determines how fast I/O operations are executed\n\n9\n\n\fEight Great Ideas of Computer Design\n\n\u25a0 Design for Moore\u2019s Law (computer design takes years, so computer architectures must \n\nanticipate rapid change) \n\n\u25a0 Use abstraction to simplify design (lower level of details are hidden to offer  a simpler        \n\nmodel at higher level) \n\n\u25a0 Make the common case fast (enhance performance of common case rather                      \n\nthan optimizing the rare case) \n\n\u25a0 Performance via parallelism (more performance by performing operation in parallel) \n\n\u25a0 Performance via pipelining (pipelining: a particular pattern of parallelism;                              \n\na bucket bridge responds to a fire fast) \n\n\u25a0 Performance via prediction ( it can be faster to guess and start working rather than          \n\nwait until you know for sure) \n\n\u25a0 Hierarchy of memories (fastest, smallest, and most expensive memory at the top)  \n\n\u25a0 Dependability via redundancy ( redundant components that can take over when                      \n\na failure occurs and help to detect failure)\n\n10\n\n\fBelow Your Program\n\n\u25a0 Hardware can only execute low level instructions; \n\u25a0 There are several layers that translate high level \n\noperations into computer instructions; the layers are \n\n\u25a0 Application software \n\n\u25a0 Written in high-level language \n\n\u25a0 System software \n\n\u25a0 Compiler: translates HLL code to machine instructions \n\u25a0 Operating System: provides service and functions, such as \n\n\u25a0 Handling input/output \n\u25a0 Allocating memory and storage \n\u25a0 Scheduling tasks & sharing resources \n\n\u25a0 Hardware \n\n\u25a0 Processor, memory, I/O controllers\n\n11\n\n\fLevels of Program Code\n\n\u25a0 High-level language \n\n\u25a0 Level of abstraction closer to problem domain \n\u25a0 Provides for productivity and portability \n\u25a0 Compiler translates high level language to \n\nassembly language  \n\u25a0 Assembly language \n\n\u25a0 A symbolic representation of machine instructions \n\u25a0 Assembler: a program that translate a symbolic \n\nversion of instructions to a binary version \n\n\u25a0 Machine language \n\n\u25a0 A binary representation of machine instructions  \n\u25a0 Send signals (on&off) to speak to hardware, so we \nneed two symbols(0&1); called binary digits(bits) \nInstructions are collection of bits that computer \nunderstands and obeys \n\n\u25a0\n\n\u25a0 We used numbers for instructions and data\n\n12\n\n\fComponents of a Computer\n\u25a0 The underlying hardware in any computer performs the \nsame basic functions: inputting data, outputting data, \nprocessing data, and storing data   \n\n\u25a0\n\nInput device: A mechanism through which the computer is \nfed information, such as a keyboard.  \n\n\u25a0 Output device:  A mechanism that conveys the result of a \n\ncomputation to a user, such as a display  \n\n\u25a0 The five classic components of a computer are input, \n\noutput, memory, datapath, and control, with the last two \nsometimes combined and called the processor.  \n\n\u25a0\n\nThe BIG Picture\n\n13\n\n\fThrough the Looking Glass\n\n\u25a0 Liquid Cryptical Display (LCD): a display technology that transmit or block of \n\nthe light \n\n\u25a0 Active matrix display:  A LCD using a transistor to control the transmission of \n\nlight at each individual pixel.  \n\n\u25a0 The image is composed of a matrix of picture elements, or pixels, which can be \n\nrepresented as a matrix of bits, called a bit map  \n\n\u25a0 A red-green-blue mask associated with each pixel on the display determines \n\nthe intensity of these colors . \n\n\u25a0 A color display might use 8 bits for each of the three colors (red, blue, and \n\ngreen), for 24 bits per pixel, permitting millions of different colors to be displayed.\n\n14\n\n\fThrough the Looking Glass\n\n\u25a0 Frame buffer stores the bitmap \n\u25a0 The following picture shows a frame buffer with a simplified design of \n\njust 4 bits per pixel.  \n\n\u25a0 Each coordinate on the frame buffer determines the shade of the \n\ncorresponding for the Raster scan CRT display \n\n\u25a0 Pixel (X0, Y0) contains the bit pattern 0011, which is a lighter shade on the \n\nscreen than the bit pattern 1101 in pixel (X1, Y1).", "mimetype": "text/plain", "start_char_idx": 3336, "end_char_idx": 7863, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9950bcd9-29af-47ca-9119-8c10af6f9128": {"__data__": {"id_": "9950bcd9-29af-47ca-9119-8c10af6f9128", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a5b4abe0-da4f-4802-a062-a745bfd2a891", "node_type": "4", "metadata": {}, "hash": "b2a763bb020fc65e531ea8c66f359b8e4e1c4ea2432f144b58e2b29d9429d149", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0fb1fdac-a9b0-4f3a-b65f-b340d808be6f", "node_type": "1", "metadata": {}, "hash": "d3a92a4443770517bebad7ededd2a53cebf4ce248e1550800363fd0adfa6b2ec", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u25a0 The image is composed of a matrix of picture elements, or pixels, which can be \n\nrepresented as a matrix of bits, called a bit map  \n\n\u25a0 A red-green-blue mask associated with each pixel on the display determines \n\nthe intensity of these colors . \n\n\u25a0 A color display might use 8 bits for each of the three colors (red, blue, and \n\ngreen), for 24 bits per pixel, permitting millions of different colors to be displayed.\n\n14\n\n\fThrough the Looking Glass\n\n\u25a0 Frame buffer stores the bitmap \n\u25a0 The following picture shows a frame buffer with a simplified design of \n\njust 4 bits per pixel.  \n\n\u25a0 Each coordinate on the frame buffer determines the shade of the \n\ncorresponding for the Raster scan CRT display \n\n\u25a0 Pixel (X0, Y0) contains the bit pattern 0011, which is a lighter shade on the \n\nscreen than the bit pattern 1101 in pixel (X1, Y1).  \n\n\u25a0\n\n15\n\n\fTouchscreen\n\n\u25a0 PostPC devices have replaced the keyboard \nand mouse with touch sensitive displays  \n\n\u25a0 Users can point directly what they are interested \n\nrather than indirectly with a mouse \n\n\u25a0 Many tablet use capacitive sensing (people are \n\nelectrical conductors ) \n\n\u25a0 Capacitance: the ability to store the electrical \n\ncharge\n\n16\n\n\fOpening the Box- Apple iPad \n\nCapacitive multitouch LCD screen\n\n3.8 V, 25 Watt-hour battery\n\nFive integrate circuits: a \ndevice combing many \ntransistors\n\n17\n\n\fApple A5\n\n\u25a0 It has two identical ARM processors or cores in the middle left of the chip and \nfour datapaths in the upper left quadrant. To the left and bottom side of the \nARM cores are interfaces to main memory (DRAM).  \n\n\u25a0 Memory: is where the programs are kept when they are running and is build \n\nfrom dynamic random access memory (DRAM) \n\n\u25a0 DRAM: Provides random access to any locations ( in contrast to sequential \n\naccess memories)\n\n18\n\n\fInside the Processor (CPU)\n\n\u25a0 People call processor central processor \n\nunit (CPU) which contains two main \ncomponents:    \n\n\u25a0 Datapath: performs arithmetic operations \n\u25a0 Control: commands the data path, \nmemory, and I/O according to the \ninstructions of the program\n\n19\n\n\fInside the Processor (CPU)\n\n\u25a0 Inside the processor is another type of \n\nmemory- cache memory  \n\n\u25a0 Cache memory: small and fast memory that \nact as a buffer for slower and larger memory \n\n\u25a0 Cache is build from Static random access \n\nmemory (SRAM) technology  \n\n\u25a0 SRAM is faster but less dense, and hence \n\nmore expensive, than DRAM  \n\n\u25a0 SRAM and DRAM are two layers of the \n\nmemory hierarchy. \n\n20\n\n\fA Safe Place for Data\n\n\u25a0 Volatile main memory \n\n\u25a0 Used to hold program while they are running \n\u25a0 Loses instructions and data when power off \n\u25a0 DRAMs \n\n\u25a0 Non-volatile secondary memory \n\n\u25a0 Used to store programs and data between runs \n\u25a0 Magnetic disk: \n\u25a0 Flash memory:  \n\u25a0 Optical disk (CDROM, DVD)  \n\u25a0 Slower than DRAMs but cheaper\n\n21\n\n\fNetworks\n\n\u25a0 Interconnect the whole computers, allowing users to communicate, share \n\nresources, and connect computers over long distances (non local access) \n\n\u25a0 Local area network (LAN): Ethernet; A network designed to carry data within a \n\ngeographically confined area, typically within a single building  \n\n\u25a0 Wide area network (WAN): cross continents and are the backbone of the Internet, \n\nwhich supports the web.  \n\n\u25a0 Wireless network: WiFi, Bluetooth; users in an small area share the airwave\n\n22\n\n\fTechnology for building processors and memory \n\n\u25a0 Electronics technology continues to evolve \n\u25a0 Increased capacity and performance \n\u25a0 Reduced cost \n\n\u25a0 The following table shows the technologies than have been used \nover time, with an estimation of the relative performance per \nunit cost for each technology\n\nYear\n\nTechnology\n\nRelative performance/cost\n\n1951\n\n1965\n\n1975\n\n1995\n\n2013\n\nVacuum tube\n\nTransistor\n\nIntegrated circuit (IC)\n\nVery large scale IC (VLSI)\n\nUltra large scale IC\n\n1\n\n35\n\n900\n\n2,400,000\n\n250,000,000,000\n\n23\n\n\fTechnology for building processors and memory \n\n\u25a0 Transistors: on/off switch controlled by an electric signal \n\u25a0 Very large integrated circuit (VLIC): A device contains hundreds of \n\nthousand to millions of transistors \n\n\u25a0 The following picture shows the growth of DRAM capacity since \n\n1977 \n\nDRAM capacity\n\n24\n\n\fReading assignment\n\n\u25a0 Ch1.1, 1.2,1.3, 1.4 and 1.5 from the \n\ntextbook\n\n25", "mimetype": "text/plain", "start_char_idx": 7027, "end_char_idx": 11245, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"a5b4abe0-da4f-4802-a062-a745bfd2a891": {"node_ids": ["bc47d105-2067-4dd0-80be-0e12e151813e", "0fb1fdac-a9b0-4f3a-b65f-b340d808be6f", "9950bcd9-29af-47ca-9119-8c10af6f9128"], "metadata": {}}}}